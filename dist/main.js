!function(e){var t={};function n(i){if(t[i])return t[i].exports;var o=t[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(i,o,function(t){return e[t]}.bind(null,o));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t){angular.module("ngLightgallery",[]).factory("$lightGallery",["$q",e=>{const t={open:function(e){let t=e.images||[];const n=e.currentImage||e.current,i=e.container||"body";let o=e.index;o=!o&&0!==o&&n?t.indexOf(n):0,t=t.map(function(e){const t={};return _.isString(e)?(t.src=e,t.thumb=e):_.isObject(e)&&(t.src=e.url||e.src,t.thumb=e.thumb||t.src),t});const s=angular.element(i),r={};return _.merge(r,e.lgoptions),r.dynamic=!0,r.index=o||0,r.dynamicEl=t,t.length&&(s.lightGallery(r),s.one("onCloseAfter.lg",function(){s.data("lightGallery").destroy(!0)})),s}};return t}]).factory("$photoswipe",["$q",function(e){const t={open:function(e){let t=e.images||[],n=e.index;const i=e.currentImage||e.current,o=e.container||"body";angular.element(o).children(".pswp").length||angular.element(o).append('\n\n<div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">\n\n    \x3c!-- Background of PhotoSwipe. \n         It\'s a separate element as animating opacity is faster than rgba(). --\x3e\n    <div class="pswp__bg"></div>\n\n    \x3c!-- Slides wrapper with overflow:hidden. --\x3e\n    <div class="pswp__scroll-wrap">\n\n        \x3c!-- Container that holds slides. \n            PhotoSwipe keeps only 3 of them in the DOM to save memory.\n            Don\'t modify these 3 pswp__item elements, data is added later on. --\x3e\n        <div class="pswp__container">\n            <div class="pswp__item"></div>\n            <div class="pswp__item"></div>\n            <div class="pswp__item"></div>\n        </div>\n\n        \x3c!-- Default (PhotoSwipeUI_Default) interface on top of sliding area. Can be changed. --\x3e\n        <div class="pswp__ui pswp__ui--hidden">\n\n            <div class="pswp__top-bar">\n\n                \x3c!--  Controls are self-explanatory. Order can be changed. --\x3e\n\n                <div class="pswp__counter"></div>\n\n                <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>\n\n                <button class="pswp__button pswp__button--share" title="Share"></button>\n\n                <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>\n\n                <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>\n\n                \x3c!-- Preloader demo http://codepen.io/dimsemenov/pen/yyBWoR --\x3e\n                \x3c!-- element will get class pswp__preloader--active when preloader is running --\x3e\n                <div class="pswp__preloader">\n                    <div class="pswp__preloader__icn">\n                      <div class="pswp__preloader__cut">\n                        <div class="pswp__preloader__donut"></div>\n                      </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">\n                <div class="pswp__share-tooltip"></div> \n            </div>\n\n            <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)">\n            </button>\n\n            <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)">\n            </button>\n\n            <div class="pswp__caption">\n                <div class="pswp__caption__center"></div>\n            </div>\n\n        </div>\n\n    </div>\n\n</div>\n\n');const s=angular.element(o).children(".pswp");n=!n&&0!==n&&i?t.indexOf(i):0,t=t.map(function(e){const t={};return _.isString(e)?t.src=e:_.isObject(e)&&(t.src=e.url||e.src),t.w=e.w||e.width||0,t.h=e.h||e.height||0,t});const r={history:!1,focus:!1,index:n};e.targetEvent&&(r.getThumbBoundsFn=function(t){var n=e.targetEvent.target,i=window.pageYOffset||document.documentElement.scrollTop,o=n.getBoundingClientRect();return{x:o.left,y:o.top+i,w:o.width}}),_.merge(r,e.photoswipeOptions);const a=new PhotoSwipe(s[0],PhotoSwipeUI_Default,t,r);return a.init(),a.listen("gettingData",function(e,t){if(t.w<1||t.h<1){var n=new Image;n.onload=function(){t.w=this.width,t.h=this.height,a.invalidateCurrItems(),a.updateSize(!0)},n.src=t.src}}),a}};return t}]).directive("viewImage",["$lightGallery","$photoswipe",(e,t)=>({restrict:"A",require:{photoswipe:"?^^"},link:function(n,i,o,s){let r,a=s.photoswipe;a&&a.addImage(i[0]),i.on("click",function(s){let l;a?(!(l=n.$eval(o.viewImage)||{}).images&&i.attr("src")&&(l.images=[i.attr("src")],l.index=0),l.photoswipeOptions={},l.photoswipeOptions.getThumbBoundsFn=function(e){const t=a.images()[e],n=window.pageYOffset||document.documentElement.scrollTop,i=t.getBoundingClientRect();return{x:i.left,y:i.top+n,w:i.width}},n.$apply(function(){r=t.open(l)})):(!(l=n.$eval(o.viewImage)||{}).images&&i.attr("src")&&(l.images=[i.attr("src")],l.index=0),n.$apply(function(){r=e.open(l)}))}),i.on("$destroy",function(){a&&a.removeImage(i[0]),r&&r.data("lightGallery")&&r.data("lightGallery").destroy(!0)})}})]).directive("photoswipe",["$photoswipe",e=>({link:function(e,t){},controller:["$scope",function(e){this._images=[],this.images=(()=>this._images),this.addImage=(e=>this._images.push(e)),this.removeImage=(e=>_.remove(this._images,e))}]})])}]);